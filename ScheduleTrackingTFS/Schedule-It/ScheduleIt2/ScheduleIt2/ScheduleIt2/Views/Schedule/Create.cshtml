@model ScheduleIt2.Models.Schedule

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@* This shows the calendar *@
<div id="calendarTempSchedule" class="mt-70"></div>

@* Modal for when the user clicks on a date to be able to enter information *@
<div id="ScheduleModal" class="modal">
    <div class="modal-content">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h3>Please Enter The Details of Your Schedule</h3>
                <hr />
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.ScheduleStartDay, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ScheduleStartDay, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now.Date } })
                        @Html.ValidationMessageFor(model => model.ScheduleStartDay, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ScheduleEndDay, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ScheduleEndDay, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now.Date } })
                        @Html.ValidationMessageFor(model => model.ScheduleEndDay, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Repeating, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Repeating, new { htmlAttributes = new { @class = "mt-10" } })
                        @Html.ValidationMessageFor(model => model.Repeating, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <input type="submit" value="Create" class="btn btn-default" />
                        <div class="btn btn-default closeModal">Close</div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
